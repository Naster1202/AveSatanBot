# Version 0.2.5 
# Creator Nater, @subadmin3
# –î–æ–±–∞–≤–ª–µ–Ω –ü–∞—Ç—á –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
from cgitb import text
from email import message
from gc import callbacks
import imp
import telebot
import config
import random
import os
import time
import datetime
import imp
from telebot import types
 
bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    if message.chat.type == 'supergroup':
        sypergroup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        syp1 = types.KeyboardButton("!–±–æ—Ç–∏–∫")
        sypergroup.add(syp1)
        bot.send_message(message.chat.id, "–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥–Ω–æ –ª–∏—à—å –ø—Ä–∏ —Å—Ç—Ä–∞—Ç–µ –≤ –≥—Ä—É–ø–ø–µ", reply_markup=sypergroup)
    elif message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("‚≠ï –í–µ–±-–ê—Ä—Ö–∏–≤")
        item3 = types.KeyboardButton("üòÉ –ü—Ä–æ—Ñ–∏–ª—å")
        item4 = types.KeyboardButton("üí¢ –ö–æ–º–∞–Ω–¥—ã")
        item5 = types.KeyboardButton("üéÆ –ò–≥—Ä—ã")
        markup.add(item1, item3, item4, item5)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
    

@bot.message_handler(content_types=['text'])
def boss(message):
    dtn = datetime.datetime.now()
    log = open('log/' + str(message.chat.id) + '_log.txt', 'a', encoding='UTF-8')
    log.writelines(dtn.strftime("%d-%m-%Y %H:%M") + '\n')
    log.writelines(f"Message from {str(message.chat.first_name)} {str(message.chat.last_name)} {str(message.chat.id)} \n")
    log.writelines(f"Text: {str(message.text)} \n")
    log.close
    # print(f"Message from {str(message.chat.first_name)} {str(message.chat.last_name)} {str(message.chat.id)}")
    # print(f"Text: {str(message.text)}")
    # f = open('log/' + str(message.chat.id) + '_log.txt', 'a', encoding='UTF-8')
    # s = bot(message.text)
    # f.write('user: ' + message.text + '\n' + s + '\n')
    # f.close()
    # # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    # bot.send_message(message.chat.id, s)
    a = 1
    if a == 1:
        if message.chat.type == 'private':  #private message.chat.type == 'private'
            if message.text == 'üí¢ –ö–æ–º–∞–Ω–¥—ã':
                bot.send_message(message.chat.id, "‚ö†Ô∏è–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥—ã ‚ö†Ô∏è \n‚ùå !–ü—Ä–æ—Ñ–∏–ª—å - –≤—ã–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –¥–æ–ø. —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–æ—Ç–∞.  \n‚úÖ !Dio - –ü—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –±—ã–ª–æ. \n‚ùå !–†–ü - –†–æ–ª-–ü–ª–µ–π –∫–æ–º–∞–Ω–¥—ã (—É–¥–∞—Ä–∏—Ç—å, —Ç—Ä–∞—Ö–Ω—É—Ç—å –∏ —Ç–¥) \n‚ùå !–ò–Ω—Ñ–æ - –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ (—Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∞–ø–ª–µ—Ç—ã –∏ —Ç–¥) \n‚ùå !–ì—Ä—É–ø–ø—ã - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–µ–≥–∞—é—â–∏—Ö –≥—Ä—É–ø–ø –ê–≤–µ–°–∞—Ç–∞–Ω \n‚ùå !–ü–æ–¥–¥–µ—Ä–∂–∫–∞ - –ö–æ–Ω—Ç–µ–Ω—Ç—ã –∞–¥–º–∏–Ω–∞ \n‚ùå !–ò–≥—Ä–∞ - –•–∑ –µ—â—ë –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª")
            elif message.text == '‚≠ï –í–µ–±-–ê—Ä—Ö–∏–≤':
                markup = types.InlineKeyboardMarkup(row_width=2)
                if message.chat.id in config.data1: 
                    markup1 = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton("29.01.22+", callback_data='29.01.22')
                    item2 = types.InlineKeyboardButton("26.01.22", callback_data='26.01.22')
                    item3 = types.InlineKeyboardButton("31.10.21", callback_data='31.10.21')
                    item4 = types.InlineKeyboardButton("16.10.21+", callback_data='16.10.21')
                    item5 = types.InlineKeyboardButton("14.10.21", callback_data='14.10.21')
                    item6 = types.InlineKeyboardButton("04.09.21", callback_data='04.09.21')
                    item7 = types.InlineKeyboardButton("26.08.21", callback_data='26.08.21')
                    item8 = types.InlineKeyboardButton("16.08.21", callback_data='16.08.21')
                    item9 = types.InlineKeyboardButton("29.07.21+", callback_data='29.07.21')
                    item10 = types.InlineKeyboardButton("15.06.21", callback_data='15.06.21')
                    item11 = types.InlineKeyboardButton("10.06.21", callback_data='10.06.21')
                    markup1.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11)
                    bot.send_message(message.chat.id, '–í–µ–±-–ê—Ä—Ö–∏–≤ –í—Å–µ –ü–æ–º–Ω–∏—Ç, \n –ü–û–í–´–®–ï–ù–û–ï –ü–†–ê–í–ê', reply_markup=markup1)
                elif message.chat.id == config.rostik_katia:
                    item2 = types.InlineKeyboardButton("26.01.22", callback_data='26.01.22')
                    item3 = types.InlineKeyboardButton("31.10.21", callback_data='31.10.21')
                    item4 = types.InlineKeyboardButton("16.10.21+", callback_data='16.10.21')
                    item5 = types.InlineKeyboardButton("14.10.21", callback_data='14.10.21')
                    item6 = types.InlineKeyboardButton("04.09.21", callback_data='04.09.21')
                    item7 = types.InlineKeyboardButton("26.08.21", callback_data='26.08.21')
                    item8 = types.InlineKeyboardButton("16.08.21", callback_data='16.08.21')
                    item9 = types.InlineKeyboardButton("29.07.21+", callback_data='29.07.21')
                    item10 = types.InlineKeyboardButton("15.06.21", callback_data='15.06.21')
                    item11 = types.InlineKeyboardButton("10.06.21", callback_data='10.06.21')
                    markup.add(item2, item3, item4, item5, item6, item7, item8, item9, item10, item11)
                    bot.send_message(message.chat.id, '–í–µ–±-–ê—Ä—Ö–∏–≤ –í—Å–µ –ü–æ–º–Ω–∏—Ç \n –û–ë–´–ß–ù–´–ï –ü–†–ê–í–ê', reply_markup=markup)
                else:
                    bot.send_message(message.chat.id, "{0.first_name} –∑–∞–ø—Ä–µ—à–µ–Ω–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤–µ–± –∞—Ä—Ö–∏–≤ \n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å <b>@subadmin3</b>".format(message.from_user, bot.get_me()),
                    parse_mode='html', reply_markup=markup)
            elif message.text == 'üòÉ –ü—Ä–æ—Ñ–∏–ª—å': 
                if message.chat.id == config.PELMENI:
                    bot.send_message(message.chat.id, "–ê —è –∑–Ω–∞—é —á—Ç–æ —Ç—ã —Å–∞—à–∞ –ø–µ–ª—å–º–µ—à–∫–∞")
                elif message.chat.id == config.ADMIN:
                    # adminka = types.InlineKeyboardMarkup(row_width=1)
                    # admin_button = types.InlineKeyboardButton("–†–∞—Å—Å–∏–ª–∫–∞ üÖ∞")
                    # adminka.add(admin_button)
                    bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω–∫–∞ –≤–∞—à–∞ –≤–µ–ª–∏—á–µ—Å—Ç–≤–æ")
                    bot.send_document(message.chat.id, file_id)
                    # bot.send_message(message.chat.id, 'Enter SPAM text: ')
                elif message.chat.id == config.SASHAG:
                    bot.send_message(message.chat.id, "–¢—ã –ì–µ–π")
                elif message.chat.id == config.DIANA:
                    bot.send_message(message.chat.id, "–ú–∞–∞–∞–∞—Å–ª–æ")
                elif message.chat.id == config.KATIAG:
                    bot.send_message(message.chat.id, "–õ–æ–ª, —è –∑–Ω–∞—é —á—Ç–æ —Ç—ã –ö–∞—Ç—è")
                else:
                    bot.send_message(message.chat.id, "–¢—ã —Ö—Ç–æ —Ç–∞–∫–æ–π")
            elif message.text == 'üéÆ –ò–≥—Ä—ã':
                # Game
                markup3 = types.InlineKeyboardMarkup(row_width=1)
                gamebutton = types.InlineKeyboardButton("Agario Online", callback_data='Agario')
                gamebutton1 = types.InlineKeyboardButton("Soon", callback_data='Soon')
                markup3.add(gamebutton, gamebutton1)
                bot.send_message(message.chat.id, "üéÆ –°–ø–∏—Å–æ–∫ –ò–≥—Ä üéÆ", reply_markup=markup3)
            elif message.text == '!Dio':
                bot.send_photo(message.chat.id, 'https://static.wikia.nocookie.net/jojo/images/0/0a/DIO_Normal_SC_Infobox_Anime.png/revision/latest?cb=20210610083452&path-prefix=ru')
            elif message.text == '!–±–æ—Ç–∏–∫':
                bot.send_message(message.chat.id, "–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç—É—Ç: \n@avesatan_bot")
            else:
                bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
        if message.chat.type == 'supergroup':
            if message.text == '!–±–æ—Ç–∏–∫':
                bot.send_message(message.chat.id, "–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç—É—Ç: \n@avesatan_bot")
    else:
        bot.send_message(message.chat.id, '–ù–µ —è–≤–ª—è–µ—à—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º Ave Satan Version 2')       

@bot.message_handler('sticker')
def hello(message):
        bot.send_message(message.chat.id, "–ù–∞–π—Å –°—Ç–∏–∫–µ—Ä –ë—Ä–æ")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'Spam':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            elif call.data == 'Agario':
                bot.send_game(call.message.chat.id, game_short_name='')
                @bot.callback_query_handler(func=lambda callback_query: callback_query.game_short_name == 'agario')
                def game(call):
                    bot.answer_callback_query(callback_query_id=call.id, url='https://www.agar.io/#ffa')
                    bot.send_message(call.message.chat.id, "Aa")
            elif call.data == 'kaki':
                bot.send_message(call.message.chat.id, '–ó–∞—á–µ–º —Ç—ã —ç—Ç–æ –Ω–∞–∂–∞–ª, —Ç–µ–±–µ —Ä–µ–∞–ª—å–Ω–æ \n –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∫–∞–∫ –±–æ—Ç –±—É–¥–µ—Ç –∫–∞–∫–∞—Ç—å ü§®ü§®ü§®')
            elif call.data == '29.01.22':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/YUBYosKVvS9oYRFQ8')
            elif call.data == '26.01.22':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/Yz6q9bF2seyQWrPC7')
            elif call.data == '31.10.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/sJo3c88KAf6XCEP87')
            elif call.data == '16.10.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/unqA3TyViGFB1Jox5')
            elif call.data == '14.10.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/qXXueoUCcTA1VhdZ6')
            elif call.data == '04.09.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/8tYu5k6U9GqCouS4A')
            elif call.data == '26.08.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/rmhVxVNnjmET2f6GA')
            elif call.data == '16.08.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/xkaTcf5RYfmPu39K7')
            elif call.data == '29.07.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/EyDTyHc8YZ8rkbvQ8')
            elif call.data == '15.06.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/CiatsMrzia4r9F4P7')
            elif call.data == '10.06.21':
                bot.send_message(call.message.chat.id, 'https://photos.app.goo.gl/9WK3DPAYqTHjvXbV7')
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ —ç—Ç–æ —á–∏—Å–ª–æ", reply_markup=None)
 
            # –ï—Å–ª–∏ False —Ç–æ –≤—Å–ø–ª—ã–≤–∞–µ—Ç —Ç–µ–Ω–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ï—Å–ª–∏ True —Ç–æ –≤—Å–ø–ª—ã–≤–∞–µ—Ç –æ–∫–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–û–ö"
            # bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
            #     text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!")
    except Exception as e:
        print(repr(e))
 

# # –ó–∞–ø–∏—Å—å –ª–æ–≥–æ–≤
    # f = open('log/' + str(message.chat.id) + '_log.txt', 'a', encoding='UTF-8')
    # s = bot(message.text)
    # f.write('user: ' + message.text + '\n' + s + '\n')
    # f.close()
    # # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    # bot.send_message(message.chat.id, s)

 # @bot.message_handler(content_types=['text'])
# def repeat_all_message(message):
#   print(message.chat.id)
#   if message.chat.id == ADMIN:
#     bot.send_message(message.chat.id,'–¢—ã –∞–¥–º–∏–Ω')
#   else:
#     bot.send_message(message.chat.id,'–¢—ã –Ω–µ –∞–¥–º–∏–Ω')

print('bot has bean started')
# RUN
bot.polling(none_stop=True)



